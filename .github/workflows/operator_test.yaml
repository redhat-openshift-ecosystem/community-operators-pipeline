name: Operator test


on:
 pull_request:
   types: [opened, reopened, synchronize, unlabeled]
   branches:
     - master
     - main

env:
  OPP_DEBUG: 1
  OPP_CONTAINER_OPT: "-t"
  OPP_SCRIPT_URL: "https://raw.githubusercontent.com/operator-framework/community-operators/support/ci_01/ci/scripts/opp.sh"
  OPP_SCRIPT_ENV_URL: "https://raw.githubusercontent.com/operator-framework/community-operators/support/ci_01/ci/scripts/opp-env.sh"
  OPP_IMAGE: "quay.io/operator_testing/operator-test-playbooks:latest"
  OPP_RELEASE_BUNDLE_REGISTRY: "quay.io"
  OPP_RELEASE_BUNDLE_ORGANIZATION: "community-operators-pipeline"
  OPP_RELEASE_INDEX_REGISTRY: "quay.io"
  OPP_RELEASE_INDEX_ORGANIZATION: "community-operators-pipeline"
  OPP_RELEASE_INDEX_NAME: "catalog"
  OPP_PROD: 0
  OPP_DRY_RUN: 0
  KIND_KUBE_VERSION: "v1.21.1"
  OPP_PRODUCTION_TYPE: "ocp"


jobs:
  pr-check:
    if: (!contains(github.event.pull_request.labels.*.name, 'do-not-merge/hold'))
    name: "PR-traffic-light"
    runs-on: ubuntu-latest
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
      - id: files
        uses: jitterbit/get-changed-files@v1
        continue-on-error: true
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: python -m pip install --upgrade pip yq
      - name: Operator traffic light
        id: op-traffic-light
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
          OPP_MODIFIED_FILES: "${{ steps.files.outputs.modified }}"
          OPP_ADDED_MODIFIED_FILES: "${{ steps.files.outputs.added_modified }}"
          OPP_RENAMED_FILES: "${{ steps.files.outputs.renamed }}"
          OPP_REMOVED_FILES: "${{ steps.files.outputs.removed }}"
        run: |
          echo "Using script '$OPP_SCRIPT_ENV_URL' ..."
          echo "global labels $OPP_LABELS"
          bash <(curl -sL $OPP_SCRIPT_ENV_URL)
    outputs:
      opp_test_ready: "${{ steps.op-traffic-light.outputs.opp_test_ready }}"
      opp_release_ready: "${{ steps.op-traffic-light.outputs.opp_release_ready }}"
      opp_stream: "${{ steps.op-traffic-light.outputs.opp_stream }}"
      opp_name: "${{ steps.op-traffic-light.outputs.opp_name }}"
      opp_version: "${{ steps.op-traffic-light.outputs.opp_version }}"
      opp_ci_yaml_only: "${{ steps.op-traffic-light.outputs.opp_ci_yaml_only }}"
      opp_op_delete: "${{ steps.op-traffic-light.outputs.opp_op_delete }}"

  test-kiwi:
    name: "kiwi / Full operator test"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "kiwi operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) kiwi "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"

  test-lemon:
    name: "lemon / Deploy from scratch"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_stream == 'upstream-community-operators'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "lemon operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) lemon "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"

  test-lemon-openshift_4_6:
    name: "lemon / Deploy from scratch (v4.6)"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_stream == 'community-operators'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "lemon_v4.6 operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) lemon_v4.6 "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"

  test-lemon-openshift_4_7:
    name: "lemon / Deploy from scratch (v4.7)"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_stream == 'community-operators'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "lemon_v4.7 operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) lemon_v4.7 "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"

  test-lemon-openshift_4_8:
    name: "lemon / Deploy from scratch (v4.8)"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_stream == 'community-operators'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "lemon_v4.8 operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) lemon_v4.8 "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"

  test-orange-latest:
    name: "orange / Deploy k8s latest"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_stream == 'upstream-community-operators' && needs.pr-check.outputs.opp_op_delete == '0'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "orange operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) orange "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"

  test-orange-openshift_4_6:
    name: "orange / Deploy o7t v4.6"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_stream == 'community-operators' && needs.pr-check.outputs.opp_op_delete == '0'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "orange_v4.6 operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) orange_v4.6 "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"

  test-orange-openshift_4_7:
    name: "orange / Deploy o7t v4.7"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_stream == 'community-operators' && needs.pr-check.outputs.opp_op_delete == '0'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "orange_v4.7 operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) orange_v4.7 "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"

  test-orange-openshift_4_8:
    name: "orange / Deploy o7t v4.8"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_stream == 'community-operators' && needs.pr-check.outputs.opp_op_delete == '0'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "orange_v4.8 operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) orange_v4.8 "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
  test-dco:
    name: "DCO test (commits signoff)"
    needs: pr-check
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Commits
        id: 'get-pr-commits'
        uses: tim-actions/get-pr-commits@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: DCO Check
        uses: tim-actions/dco@v1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commits: ${{ steps.get-pr-commits.outputs.commits }}

  test-summary:
    name: "Summary"
    needs: [ pr-check, test-dco, test-kiwi, test-lemon, test-lemon-openshift_4_6, test-lemon-openshift_4_7, test-orange-latest, test-orange-openshift_4_6, test-orange-openshift_4_7 ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: PR
        if: needs.pr-check.outputs.opp_test_ready == '1'
        continue-on-error: true
        run: |
          echo "OP_PR=${{ github.event.pull_request.number }}"
      - name: Save PR number
        run: |
          mkdir -p ./pr
          echo ${{ github.event.number }} > ./pr/NR
      - uses: actions/upload-artifact@v2
        with:
          name: pr
          path: pr/
