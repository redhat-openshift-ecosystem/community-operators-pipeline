{% raw %}
name: "Operator Convert"
on:
  workflow_dispatch:
    inputs:
      operators:
        description: 'Operators'     
        required: true
        default: 'all'
      target-branch:
        description: 'Target branch'     
        required: true
        default: 'main'
      playbook_repo:
        description: 'Playbook repo'     
        required: true
        default: 'https://github.com/redhat-openshift-ecosystem/operator-test-playbooks'
      playbook_branch:
        description: 'Playbook branch'     
        required: true
        default: 'upstream-community'
env:
  OPP_OPERATORS: ${{ github.event.inputs.operators }}
  OPP_ANSIBLE_PULL_REPO: "${{ github.event.inputs.playbook_repo }}"
  OPP_ANSIBLE_PULL_BRANCH: "${{ github.event.inputs.playbook_branch }}"
{% endraw %}
  OPP_PRODUCTION_TYPE: "{{ default_config.production.type }}"
{% raw %}

jobs:
  convert:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.FRAMEWORK_MERGE }}
      - name: Commit files
        run: |
          FAKE_RC=false
          git config --local user.email "41898282+framework-automation[bot]@users.noreply.github.com" || $FAKE_RC
          git config --local user.name "framework-automation" || $FAKE_RC


          ls -al

          if [[ $OPP_OPERATORS == "all" ]];then
            echo "Searching for all operators ..."
            exit 1
          fi
          
          for op in $OPP_OPERATORS;do
            ansible-pull -U $OPP_ANSIBLE_PULL_REPO -C $OPP_ANSIBLE_PULL_BRANCH -i localhost, -e run_upstream=true -e run_prepare_catalog_repo_upstream=false -e run_remove_catalog_repo=false upstream/local.yml --tags reset_tools,operator_info \
            -e operator_dir=$PWD/operators/$op -e cluster_type=$OPP_PRODUCTION_TYPE -e strict_cluster_version_labels=true -e strict_k8s_bundles=true $ANSIBLE_ARGS


            echo "Copy bundle to man repo"
            #git add . || $FAKE_RC
            #git commit -m "Operator '$op' converted from packagemanifest to bundle format" -a || $FAKE_RC
            #git push || $FAKE_RC


          done

{% endraw %}
