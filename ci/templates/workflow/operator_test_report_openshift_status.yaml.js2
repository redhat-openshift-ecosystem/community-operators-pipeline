{% raw %}
name: Report Openshift status

on:
  repository_dispatch:
    types:
      - manual-openshift-report
      - openshift-test-status

env:
{% endraw %}
  OPP_PRODUCTION_TYPE: "{{ default_config.production.type }}"
{% raw %}

jobs:
  remove-add-label:
    runs-on: ubuntu-latest
    steps:
      - name: "Info"
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log(context.payload.client_payload.source_pr)
            console.log(context.payload.client_payload.remove_labels)
            console.log(context.payload.client_payload.add_labels)
        continue-on-error: true
      - name: "Remove labels"
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            if (context.payload.client_payload.remove_labels != undefined) {
              for (const label of context.payload.client_payload.remove_labels) {
                github.issues.removeLabel({
                  issue_number: context.payload.client_payload.source_pr,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label
                })
              }
            }
        continue-on-error: true

      - name: "Add labels"
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            if (context.payload.client_payload.add_labels != undefined) {
              github.issues.addLabels({
                issue_number: context.payload.client_payload.source_pr,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: context.payload.client_payload.add_labels
              })
            }

      - uses: actions/github-script@v4
        id: labels
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labels = await github.issues.listLabelsOnIssue({
              issue_number: context.payload.client_payload.source_pr,
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            console.log(labels.data)
            return labels.data

      - name: Add installation final label
        uses: actions/github-script@v4
        if: |
{% endraw %}
{%- set versions_failed = [] -%}
{%- set versions_validated = [] -%}
{% for v in default_config.production.index.tags -%}
{% if not 'rc' in v %} 
{{- versions_failed.append("                           (!contains(fromJSON(steps.labels.outputs.result).*.name, 'installation-failed-"+ v[1:] | regex_replace('-db$','') +"\n'))") |default("", True) -}}
{{- versions_validated.append("'(contains(fromJSON(steps.labels.outputs.result).*.name, 'installation-validated-"+ v[1:] | regex_replace('-db$','') +"'))") |default("", True) -}}
{% endif %}
{%- endfor %}
{{- versions_failed|join(' && ') }} &&
{{ versions_validated|join(' && ') }}
{% raw %}
        continue-on-error: true
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.addLabels({
              issue_number: context.payload.client_payload.source_pr,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [ 'installation-validated' ]
            })

      - uses: actions/github-script@v4
        id: labels2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labels = await github.issues.listLabelsOnIssue({
              issue_number: context.payload.client_payload.source_pr,
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            console.log(labels.data)
            return labels.data

      - uses: actions/github-script@v4
        if: |
          (contains(fromJSON(steps.labels2.outputs.result).*.name, 'installation-validated'))
        with:
          github-token: ${{ secrets.FRAMEWORK_MERGE }}
          script: |
            github.issues.createComment({
              issue_number: context.payload.client_payload.source_pr,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '/merge possible'
            })
{% endraw %}
