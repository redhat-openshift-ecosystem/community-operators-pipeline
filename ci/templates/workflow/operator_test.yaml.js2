name: Operator test

{% raw %}
on:
 pull_request_target:
   types: [opened, reopened, synchronize, unlabeled]
   branches:
     - master
     - main

env:
{% endraw %}
  OPP_DEBUG: 1
  OPP_CONTAINER_OPT: "-t"
  OPP_SCRIPT_URL: "{{ default_config.pipeline.ci_scripts_dir }}/opp.sh"
  OPP_SCRIPT_ENV_URL: "{{ default_config.pipeline.ci_scripts_dir }}/opp-env.sh"
  OPP_SCRIPT_ENV_OPRT_URL: "{{ default_config.pipeline.ci_scripts_dir }}/opp-oprt.sh"
  OPP_IMAGE: "{{ default_config.pipeline.image }}"
  OPP_ANSIBLE_PULL_REPO: "https://github.com/redhat-openshift-ecosystem/operator-test-playbooks/"
  OPP_ANSIBLE_PULL_BRANCH: "upstream-community"
  OPP_THIS_REPO_BASE: "{{ default_config.pipeline.base }}"
  OPP_THIS_REPO: "{{ default_config.pipeline.repo }}"
  OPP_THIS_BRANCH: "{{ default_config.pipeline.branch }}"
  OPP_RELEASE_BUNDLE_REGISTRY: "{{ default_config.production.bundle.registry }}"
  OPP_RELEASE_BUNDLE_ORGANIZATION: "{{ default_config.production.bundle.organization }}"
  OPP_RELEASE_INDEX_REGISTRY: "{{ default_config.production.index.registry }}"
  OPP_RELEASE_INDEX_ORGANIZATION: "{{ default_config.production.index.organization }}"
  OPP_RELEASE_INDEX_NAME: "{{ default_config.production.index.name }}"
  OPP_MIRROR_INDEX_MULTIARCH: "registry.redhat.io/openshift4/ose-operator-registry:v4.5"
  OPP_MIRROR_INDEX_MULTIARCH_POSTFIX: "s"
  IIB_INPUT_REGISTRY_USER: "{{ default_config.production.mirror.username.in }}"
  OPP_PROD: 0
  OPP_DRY_RUN: 0
  KIND_KUBE_VERSION: "{{ default_config.tools.kind_kube_version }}"
  OPP_PRODUCTION_TYPE: "{{ default_config.production.type }}"
  OPP_REVIEWERS_ENABLED: {{ default_config.pipeline.reviewers.enabled }}
{% raw %}

jobs:
  pr-check:
    if: (!contains(github.event.pull_request.labels.*.name, 'do-not-merge/hold'))
    name: "PR-traffic-light"
    runs-on: ubuntu-latest
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      # - name: Checkout code
      #   uses: actions/checkout@v2
      # - id: files
      #   uses: jitterbit/get-changed-files@v1
      #   continue-on-error: true
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: python -m pip install --upgrade pip yq
      # - name: Operator traffic light
      #   id: op-traffic-light
      #   env:
      #     OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
      #     OPP_MODIFIED_FILES: "${{ steps.files.outputs.modified }}"
      #     OPP_ADDED_MODIFIED_FILES: "${{ steps.files.outputs.added_modified }}"
      #     OPP_RENAMED_FILES: "${{ steps.files.outputs.renamed }}"
      #     OPP_REMOVED_FILES: "${{ steps.files.outputs.removed }}"
      #   run: |
      #     echo "Using script '$OPP_SCRIPT_ENV_URL' ..."
      #     echo "global labels $OPP_LABELS"
      #     bash <(curl -sL $OPP_SCRIPT_ENV_URL)
      - name: Operator traffic light
        id: op-traffic-light
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
          OPP_PR_AUTHOR: "${{ github.event.pull_request.user.login }}"
          OPP_OPRT_REPO: "${{ github.event.pull_request.head.repo.full_name }}"
          OPP_OPRT_SHA: "${{ github.event.pull_request.head.sha }}"
          OPP_OPRT_SRC_REPO: "${{ github.event.pull_request.base.repo.full_name }}"
          OPP_OPRT_SRC_BRANCH: "${{ github.event.pull_request.base.ref }}"
        run: |
          echo "Using script '$OPP_SCRIPT_ENV_OPRT_URL' ..."
          echo "global labels $OPP_LABELS"
          bash <(curl -sL $OPP_SCRIPT_ENV_OPRT_URL)

    outputs:
      opp_test_ready: "${{ steps.op-traffic-light.outputs.opp_test_ready }}"
      opp_release_ready: "${{ steps.op-traffic-light.outputs.opp_release_ready }}"
      opp_stream: "${{ steps.op-traffic-light.outputs.opp_stream }}"
      opp_name: "${{ steps.op-traffic-light.outputs.opp_name }}"
      opp_version: "${{ steps.op-traffic-light.outputs.opp_version }}"
      opp_ci_yaml_only: "${{ steps.op-traffic-light.outputs.opp_ci_yaml_only }}"
      opp_op_delete: "${{ steps.op-traffic-light.outputs.opp_op_delete }}"

  test-kiwi:
    name: "kiwi / Full operator test"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "kiwi operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) kiwi "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
{% endraw %}
{% if default_config.production.type == 'k8s' %}
{% raw %}
  test-lemon:
    name: "lemon / Deploy from scratch"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "lemon operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) lemon "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
{% endraw %}
{% else %}
{% raw %}
  test-lemon-openshift:
    name: "lemon / Deploy from scratch"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1'
    runs-on: ubuntu-latest
    strategy:
      matrix:
{% endraw %}
        index-tag: {{ default_config.production.index.tags }}
{% raw %}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
          OPERATOR_INDEX_TAG: ${{ matrix.index-tag }}
        run: |
          echo "lemon_${OPERATOR_INDEX_TAG} operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) lemon_${OPERATOR_INDEX_TAG} "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
{% endraw %}
{% endif %}
{% raw %}

{% endraw %}
{% if default_config.production.type == 'k8s' %}
{% raw %}
  test-orange-latest:
    name: "orange / Deploy k8s latest"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_op_delete == '0'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "orange operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) orange "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
{% endraw %}
{% else %}
{% raw %}
  test-orange-openshift:
    name: "orange / Deploy o7t"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_op_delete == '0'
    runs-on: ubuntu-latest
    strategy:
      matrix:
{% endraw %}
        index-tag: {{ default_config.production.index.tags }}
{% raw %}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
          OPERATOR_INDEX_TAG: ${{ matrix.index-tag }}
          OPP_MIRROR_INDEX_ENABLED: 1
          OPP_IIB_INSTALL: 1
          IIB_INPUT_REGISTRY_TOKEN: ${{ secrets.IIB_INPUT_REGISTRY_TOKEN }}
        run: |
          echo "orange_${OPERATOR_INDEX_TAG} operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) orange_${OPERATOR_INDEX_TAG} "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
{% endraw %}
{% endif %}
{% raw %}          
  test-dco:
    name: "DCO test (commits signoff)"
    needs: pr-check
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Commits
        id: 'get-pr-commits'
        uses: tim-actions/get-pr-commits@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: DCO Check
        uses: tim-actions/dco@v1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commits: ${{ steps.get-pr-commits.outputs.commits }}

  test-summary:
    name: "Summary"
{% endraw %}
{% if default_config.production.type == 'k8s' %}
{% raw %}    
    needs: [ pr-check, test-dco, test-kiwi, test-lemon, test-orange-latest]
{% endraw %}
{% else %}
{% raw %}
    needs: [ pr-check, test-dco, test-kiwi, test-lemon-openshift_4_6, test-lemon-openshift_4_7, test-lemon-openshift_4_8, test-orange-openshift_4_6, test-orange-openshift_4_7, test-orange-openshift_4_8 ]
{% endraw %}
{% endif %}
{% raw %}
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: PR
        if: needs.pr-check.outputs.opp_test_ready == '1'
        continue-on-error: true
        run: |
          echo "OP_PR=${{ github.event.pull_request.number }}"
      - name: Save PR number
        run: |
          mkdir -p ./pr
          echo ${{ github.event.number }} > ./pr/NR
      - uses: actions/upload-artifact@v2
        with:
          name: pr
          path: pr/
{% endraw %}
