name: DCO test

{% raw %}
on:
  pull_request:
    types: [opened, reopened, synchronize, unlabeled]
    branches:
      - master
      - main

env:
{% endraw %}
  OPP_DEBUG: 1
  OPP_CONTAINER_OPT: "-t"
  OPP_SCRIPT_ENV_URL: "{{ default_config.pipeline.ci_scripts_dir }}/opp-env.sh"
  OPP_IMAGE: "{{ default_config.pipeline.image }}"
  OPP_ANSIBLE_PULL_REPO: "https://github.com/redhat-openshift-ecosystem/operator-test-playbooks/"
  OPP_ANSIBLE_PULL_BRANCH: "upstream-community"
  OPP_THIS_REPO_BASE: "{{ default_config.pipeline.base }}"
  OPP_THIS_REPO: "{{ default_config.pipeline.repo }}"
  OPP_THIS_BRANCH: "{{ default_config.pipeline.branch }}"
  OPP_PROD: 0
  OPP_DRY_RUN: 0
  KIND_KUBE_VERSION: "{{ default_config.tools.kind_kube_version }}"
  OPP_PRODUCTION_TYPE: "{{ default_config.production.type }}"
  OPP_REVIEWERS_ENABLED: {{ default_config.pipeline.reviewers.enabled }}
{% raw %}

jobs:
  pr-check:
    if: (!contains(github.event.pull_request.labels.*.name, 'do-not-merge/hold'))
    name: "PR-traffic-light"
    runs-on: ubuntu-latest
    steps:
      Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
      - id: files
        uses: jitterbit/get-changed-files@v1
        continue-on-error: true
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: python -m pip install --upgrade pip yq
      - name: Operator traffic light
        id: op-traffic-light
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
          OPP_MODIFIED_FILES: "${{ steps.files.outputs.modified }}"
          OPP_ADDED_MODIFIED_FILES: "${{ steps.files.outputs.added_modified }}"
          OPP_RENAMED_FILES: "${{ steps.files.outputs.renamed }}"
          OPP_REMOVED_FILES: "${{ steps.files.outputs.removed }}"
        run: |
          echo "Using script '$OPP_SCRIPT_ENV_URL' ..."
          echo "global labels $OPP_LABELS"
          bash <(curl -sL $OPP_SCRIPT_ENV_URL)
    outputs:
      opp_test_ready: "${{ steps.op-traffic-light.outputs.opp_test_ready }}"
      opp_release_ready: "${{ steps.op-traffic-light.outputs.opp_release_ready }}"
      opp_stream: "${{ steps.op-traffic-light.outputs.opp_stream }}"
      opp_name: "${{ steps.op-traffic-light.outputs.opp_name }}"
      opp_version: "${{ steps.op-traffic-light.outputs.opp_version }}"
      opp_ci_yaml_only: "${{ steps.op-traffic-light.outputs.opp_ci_yaml_only }}"
      opp_op_delete: "${{ steps.op-traffic-light.outputs.opp_op_delete }}"

  test-dco:
    name: "DCO test (commits signoff)"
    needs: pr-check
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Commits
        id: 'get-pr-commits'
        uses: tim-actions/get-pr-commits@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: DCO Check
        uses: tim-actions/dco@v1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commits: ${{ steps.get-pr-commits.outputs.commits }}

  test-summary:
    name: "Summary"
    needs: [ pr-check, test-dco]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: PR
        if: needs.pr-check.outputs.opp_test_ready == '1'
        continue-on-error: true
        run: |
          echo "OP_PR=${{ github.event.pull_request.number }}"
      - name: Save PR number
        run: |
          mkdir -p ./pr
          echo ${{ github.event.number }} > ./pr/NR
      - uses: actions/upload-artifact@v2
        with:
          name: pr
          path: pr/
{% endraw %}
